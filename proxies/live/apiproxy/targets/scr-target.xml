<TargetEndpoint name="summary-care-record-target">
  <FaultRules>
    <FaultRule name="access_token_expired">
      <Step>
        <Name>ExtractVariables.OAuthErrorFaultString</Name>
      </Step>
      <Step>
        <Name>AssignMessage.OAuthPolicyErrorResponse</Name>
      </Step>
      <Condition>oauthV2.OauthV2.VerifyAccessToken.failed</Condition>
    </FaultRule>
  </FaultRules>
  <PreFlow>
    <Request>
      <Step>
        <Name>OauthV2.VerifyAccessToken</Name>
      </Step>
      <Step>
        <Name>Quota</Name>
      </Step>
      <Step>
        <Name>SpikeArrest</Name>
      </Step>
      <Step>
        <Name>AssignMessage.AddUserIdHeader</Name>
      </Step>
      <Step>
        <Name>AssignMessage.AddIssuerHeader</Name>
      </Step>
      <Step>
        <Name>KeyValueMapOperations.GetSecureVariables</Name>
      </Step>
      <Step>
        <Name>AssignMessage.PopulateAsidFromApp</Name>
        <Condition>(app.asid IsNot null)</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.AddAsidHeader</Name>
      </Step>
      <Step>
        <Name>AssignMessage.AddOriginalRequestIp</Name>
      </Step>
      <Step>
        <Name>AssignMessage.AddBaseUrl</Name>
      </Step>
    </Request>
  </PreFlow>
  <!--
    The {{ HOSTED_TARGET_CONNECTION }} resolved to this:
    For example:
    <HTTPTargetConnection>
      <SSLInfo>
        <Enabled>true</Enabled>
      </SSLInfo>
      <LoadBalancer>
        <Server name="summary-care-record-target" />
      </LoadBalancer>
    </HTTPTargetConnection>
  -->
  <HTTPTargetConnection>
    {{ HOSTED_TARGET_CONNECTION }}
  </HTTPTargetConnection>
  <DefaultFaultRule>
    <Step>
      <Name>AssignMessage.CatchallErrorMessage</Name>
    </Step>
  </DefaultFaultRule>
</TargetEndpoint>
